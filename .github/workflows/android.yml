name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checking out branch
      uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2.0.10

    - name: Decode Keystore
      env:
        ENCODED_STRING: ${{ secrets.SIGNING_KEY }}
        RELEASE_KEYSTORE_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        RELEASE_KEYSTORE_ALIAS: key0
        RELEASE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        echo $ENCODED_STRING > keystore-b64.txt
        base64 -d keystore-b64.txt > app/android_key.jks

    - name: Build Release APK
      run: |
        export S_PASSWORD=${{ secrets.KEY_PASSWORD }}
        ./gradlew assembleRelease --stacktrace

    - name: Sign Release APK
      env:
        RELEASE_KEYSTORE_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        RELEASE_KEYSTORE_ALIAS: key0
        RELEASE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: ./gradlew app:signingReport --stacktrace

    - name: Get signed release file APK path
      id: signedReleaseApk
      run: echo "signedApkfile=$(find app/build/outputs/apk/release/*.apk | grep -v 'unsigned')" >> $GITHUB_OUTPUT

    - name: Print sha certificate
      run: echo ${{ secrets.KEY_PASSWORD }} |  keytool -keystore app/android_key.jks -list -v

    - name: Upload Signed Release APK to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: signed-release-apk
        path: app/build/outputs/apk/release/app-release.apk
