name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checking out branch
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      # This will decode the keystore from base 64 text representation that we have stored in secrets
      # and generates and keystore file and gets stored in /android-app path
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_KEY }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: key0
          RELEASE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks

      - name: Build Release apk
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: key0
          RELEASE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease --stacktrace

      - name: Build Release bundle
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: key0
          RELEASE_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew bundleRelease --stacktrace

      - name: Get release file aab path
        id: releaseAab
        run: echo "aabfile=$(find app/build/outputs/bundle/release/*.aab)" >> $GITHUB_OUTPUT

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT
        
      - name: Zip Files
        uses: papeloto/action-zip@v1
        with:
          files: ${{ steps.releaseAab.outputs.aabfile }} ${{ steps.releaseApk.outputs.apkfile }}
          dest: ${{ steps.releaseApk.outputs.apkfile }}.zip


      - uses: actions/upload-artifact@v4
        with:
          name: generatedPrelease
          path: ${{ steps.releaseApk.outputs.apkfile }}.zip
